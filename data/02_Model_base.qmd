---
title: "Base Model"
format: 
  html:
    toc: true
    toc-depth: 5
    number-sections: true
execute: 
    fig-width: 9
---

## Import target

```{r echo=FALSE, warning=FALSE, message=FALSE}
library(targets)
library(patchwork)
library(gt)

tar_load_globals()

tar_load_everything()
```

## ベースモデル

### Preprocessing

#### 対数変換、正規化なし

```{r}
rec_base
```

#### 対数変換、正規化あり

```{r}
rec_base_v2_scaling
```

### モデル

#### Workflowsetで管理

```{r}
spec_xgb_base
spec_lightgbm_base
spec_lm_base
spec_keras_base
```

#### 個別管理

```{r}
wkf_tabnet_base |> 
  extract_fit_parsnip()
```

## 性能

### 対数変換、正規化なし

```{r}
res <- 
  wkf_set_base_fit_metric |> 
  dplyr::mutate(plot_res = pmap(.l = list(best_params, wflow_id), function(obj, id){
    obj$.predictions[[1]] |> 
      ggplot(aes(x = POWER, y = .pred)) +
      geom_abline(slope = 1, intercept = 0) +
      geom_point(colour = "blue", alpha = 0.4) +
      ggtitle(id) +
      theme_bw()
      
  }))

res$plot_res

wkf_tabnet_base |> 
  collect_predictions() |> 
  ggplot(aes(x = POWER, y = .pred)) +
  geom_abline(slope = 1, intercept = 0) +
  geom_point(colour = "blue", alpha = 0.4) +
  ggtitle("tabnet") +
  theme_bw()
```

### 対数変換、正規化あり

```{r}
res <- 
  wkf_set_base_v2_fit_metric |> 
  dplyr::mutate(plot_res = pmap(.l = list(best_params, wflow_id), function(obj, id){
    obj$.predictions[[1]] |> 
      ggplot(aes(x = POWER, y = .pred)) +
      geom_abline(slope = 1, intercept = 0) +
      geom_point(colour = "blue", alpha = 0.4) +
      ggtitle(id) +
      theme_bw()
  }))

res$plot_res

wkf_tabnet_base_v2 |> 
  collect_predictions() |> 
  ggplot(aes(x = POWER, y = .pred)) +
  geom_abline(slope = 1, intercept = 0) +
  geom_point(colour = "blue", alpha = 0.4) +
  ggtitle("tabnet") +
  theme_bw()
```

### メトリクス

```{r}
dplyr::bind_rows(
  wkf_set_base_fit_metric$metrics |> 
    tibble() |> 
    dplyr::mutate(wflow_id = wkf_set_base_fit_metric$wflow_id) |> 
    dplyr::select(wflow_id, .metric, .estimate),
  
  wkf_tabnet_base_metric |> 
    dplyr::mutate(wflow_id = "base_tabnet") |> 
    dplyr::filter(.metric == "rmse") |> 
    dplyr::select(wflow_id, .metric, .estimate),
  
  wkf_set_base_v2_fit_metric$metrics |> 
    tibble() |> 
    dplyr::mutate(wflow_id = wkf_set_base_v2_fit_metric$wflow_id) |> 
    dplyr::select(wflow_id, .metric, .estimate) |> 
    dplyr::mutate(wflow_id = str_replace_all(wflow_id, "base_", "base_v2_")),
  
  wkf_tabnet_base_v2_metric |> 
    dplyr::mutate(wflow_id = "base_v2_tabnet") |> 
    dplyr::filter(.metric == "rmse") |> 
    dplyr::select(wflow_id, .metric, .estimate) 
) |> 
  gt::gt()
  
```

### 残差の分布

-   性能の良いlightGBDで視覚化する

```{r}
base_lightgbd_prediction |> 
  dplyr::mutate(residual = .pred - POWER) |> 
  ggplot(aes(sample = residual)) +
  stat_qq_line(color="Red") +
  geom_qq() +
  theme_bw()


base_lightgbd_prediction |> 
  dplyr::mutate(residual = .pred - POWER) |> 
  ggplot(aes(x = POWER, y = residual)) +
  geom_point() +
  theme_bw()
```

### トレンドとの比較

```{r}
base_lightgbd_prediction |> 
  dplyr::select(-POWER) |> 
  dplyr::bind_cols(df_model_test) |> 
  dplyr::mutate(DATE = ymd(DATE)) |> 
  ggplot(aes(x = DATE, y = POWER)) +
  geom_line() +
  geom_line(aes(x = DATE, y = .pred), colour = "red") +
  theme_bw()
```

